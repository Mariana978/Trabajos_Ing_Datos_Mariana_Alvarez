# -*- coding: utf-8 -*-
"""ETL_Código.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1O3I-ih59_g0eJEUWJZQ-WOo682VInjqN
"""

import pandas as pd

# 1. EXTRAER: Cargar el archivo Excel
file_path = "NEWDATA.xlsx"  # Ruta del archivo de entrada
xls = pd.ExcelFile(file_path)  # Cargar el archivo

# Cargar la hoja correcta (asegúrate de que sea la misma en tu archivo)
df = pd.read_excel(xls, sheet_name="clientes", skiprows=1)

# 2. TRANSFORMAR: Limpieza de datos
# Renombrar columnas con nombres adecuados
df.columns = [
    "NIT", "Nombre", "Contacto", "Dirección", "Teléfono", "Ciudad", "Apartado", "Zona", "Tipo", "DiasDcto",
    "Plazo", "NumFacturas", "DctoPP", "Interes", "CupoCredito", "Saldo", "PesosVentas", "DctoComercial",
    "UltimaFechaVenta", "Regimen", "Ingreso", "Fax", "Telefono2", "TelefonoAlterno", "Vendedor", "NitPpal",
    "R1", "R2", "ListaPrecios", "GranContribuyente", "I2", "Email", "Homepage", "Inactivo"
]

# Eliminar filas completamente vacías
df = df.dropna(how="all")

# Eliminar filas duplicadas
df = df.drop_duplicates()

# Limpiar espacios en nombres y convertir a mayúsculas
df["Nombre"] = df["Nombre"].str.strip().str.upper()

# Rellenar valores vacíos en todas las columnas con "No tenemos info"
df.fillna("No tenemos info", inplace=True)

# Convertir NIT a string para evitar pérdida de información (ceros a la izquierda)
df["NIT"] = df["NIT"].astype(str)

# CORREGIR FORMATO DE FECHA (Si la columna "UltimaFechaVenta" existe y tiene fechas)
if "UltimaFechaVenta" in df.columns:
    df["UltimaFechaVenta"] = pd.to_datetime(df["UltimaFechaVenta"], errors="coerce").dt.strftime("%Y-%m-%d")
    df["UltimaFechaVenta"].fillna("No tenemos info", inplace=True)  # Si la conversión falla, poner "No tenemos info"

# CORREGIR FORMATO DE FAX (Convertir a string y evitar valores numéricos erróneos)
df["Fax"] = df["Fax"].astype(str).str.replace(".0", "", regex=False).str.strip()

# 3. ELIMINAR COLUMNAS VACÍAS Y COLUMNAS CON SOLO "No tenemos info"
columnas_antes = df.columns.tolist()

# Eliminar columnas completamente vacías
df = df.dropna(axis=1, how="all")

# Eliminar columnas donde **TODOS** los valores sean "No tenemos info"
columnas_a_eliminar = [col for col in df.columns if (df[col] == "No tenemos info").all()]
df.drop(columns=columnas_a_eliminar, inplace=True)

# Obtener la lista de columnas eliminadas
columnas_eliminadas = list(set(columnas_antes) - set(df.columns))

# 4. CARGAR: Guardar los datos limpios en un nuevo archivo Excel
output_file = "NEWDATA_LIMPIO.xlsx"
df.to_excel(output_file, index=False)

# Mostrar columnas eliminadas
print(f" ETL completado. Datos limpios guardados en {output_file}")
if columnas_eliminadas:
    print(f"Columnas eliminadas: {columnas_eliminadas}")
else:
    print(" No se eliminaron columnas.")